{"version":3,"sources":["pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","userSlug","useParams","classNames","slug","to","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","useState","people","setPeople","hasError","setHasError","loading","setLoading","fetchPeopleFromServer","peopleFromServer","peopleWithParents","map","find","useEffect","noPeopleOnServer","length","PeoplePage","getLinkClass","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cd5b9871.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { userSlug } = useParams();\n\n  return (\n    <>\n      <tr\n        data-cy=\"person\"\n        className={classNames({\n          'has-background-warning': person.slug === userSlug,\n        })}\n      >\n        <td>\n          <Link\n            to={`/people/${person.slug}`}\n            className={classNames(\n              { 'has-text-danger': person.sex === 'f' },\n            )}\n          >\n            {person.name}\n          </Link>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>\n          {person.mother ? (\n            <Link\n              to={`/people/${person.mother.slug}`}\n              className={classNames(\n                'has-text-danger',\n              )}\n            >\n              {person.motherName}\n            </Link>\n          ) : (person.motherName || '-')}\n        </td>\n        <td>\n          {person.father ? (\n            <Link\n              to={`/people/${person.father.slug}`}\n            >\n              {person.fatherName}\n            </Link>\n          ) : (person.fatherName || '-')}\n        </td>\n      </tr>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const fetchPeopleFromServer = async () => {\n    setHasError(false);\n    setLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map(person => ({\n        ...person,\n        mother: peopleFromServer.find(\n          mother => mother.name === person.motherName,\n        ),\n        father: peopleFromServer.find(\n          father => father.name === person.fatherName,\n        ),\n      }));\n\n      setPeople(peopleWithParents);\n    } catch {\n      setHasError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeopleFromServer();\n  }, []);\n\n  const noPeopleOnServer = !people.length && !loading && !hasError;\n\n  return (\n    <>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {noPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    key={person.slug}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":userSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}